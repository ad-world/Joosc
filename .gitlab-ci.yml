# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

before_script:
  - apt-get update -qq && apt-get install -y -qq python3 python3-pip ninja-build gcc flex bison valgrind time git zip cmake nasm

variables:
  CCACHE_BASEDIR: $CI_PROJECT_DIR
  CCACHE_DIR: $CI_PROJECT_DIR/ccache

image:
  name: gcc
  pull_policy: [always, if-not-present]

PROJECT_BUILD:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script:
  #   - apt update && apt -y install make autoconf
  script:
    - ccache --zero-stats
    - make build
    - ccache --show-stats
  artifacts:
    paths:
      - joosc
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - $CCACHE_DIR

UNIT_TEST:
  stage: test
  script: make unit-test
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - $CCACHE_DIR

SCANNER_TEST:
  stage: test
  script: make scanner-test
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - $CCACHE_DIR

INTEGRATION_TEST:
  stage: test
  script: make integration-test
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - $CCACHE_DIR
  allow_failure: true

SUBMISSION:
  stage: .post
  needs:
    - PROJECT_BUILD
  script: make submission anum=4
  artifacts:
    paths:
      - a*.zip
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - $CCACHE_DIR
